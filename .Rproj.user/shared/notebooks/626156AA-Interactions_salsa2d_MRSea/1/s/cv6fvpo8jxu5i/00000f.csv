"0","require(dplyr)"
"0","dists<-makeDists(datacoords = mydata[,c('x.pos', 'y.pos', 'impact')], "
"0","                 knotcoords = myknots, "
"0","                 knotmat = TRUE)"
"1","debugging in: "
"1","makeDists(datacoords = mydata[, c(""x.pos"", ""y.pos"", ""impact"")], 
"
"1","    knotcoords = myknots, knotmat = TRUE)
"
"1","debug at C:/Users/lindesay/Documents/GitHub/MRSea/R/functions.R#263: "
"1","{
"
"1","    stopifnot(ncol(knotcoords) == ncol(datacoords), (ncol(datacoords) | 
"
"1","        ncol(knotcoords)) < 4)
"
"1","    if (ncol(knotcoords) == 3) {
"
"1","        knotcoords.factor = knotcoords[, 3]
"
"1","        knotcoords = knotcoords[, 1:2]
"
"1","        datacoords.factor = datacoords[, 3]
"
"1","        datacoords = datacoords[, 1:2]
"
"1","        factorknots = TRUE
"
"1","    }
"
"1","    else {
"
"1","        factorknots = FALSE
"
"1","    }
"
"1","    if (is.null(polys)) {
"
"1","        if (length(which(is.na(knotcoords[, 1]))) > 0) 
"
"1","            stop(""remove NAs from knotcoords"")
"
"1","        d2k <- matrix(0, ncol = dim((knotcoords))[1], nrow = length(datacoords[, 
"
"1","            1]))
"
"1","        for (i in 1:dim(knotcoords)[1]) {
"
"1","            d2k[, i] <- sqrt((datacoords[, 1] - knotcoords[i, 
"
"1","                1])^2 + (datacoords[, 2] - knotcoords[i, 2])^2)
"
"1","        }
"
"1","        if (knotmat == T) {
"
"1","            knotDist = as.matrix(dist(na.omit(knotcoords), method = ""euclidean"", 
"
"1","                diag = TRUE, upper = TRUE))
"
"1","        }
"
"1","    }
"
"1","    if (!is.null(polys)) {
"
"1","        Nx = seq(min(c(datacoords[, 1], knotcoords[, 1])), max(c(datacoords[, 
"
"1","            1], knotcoords[, 1])), length = grid.dim[1])
"
"1","        Ny = seq(min(c(datacoords[, 2], knotcoords[, 2])), max(c(datacoords[, 
"
"1","            2], knotcoords[, 2])), length = grid.dim[2])
"
"1","        xygrid <- expand.grid(x = Nx, y = Ny)
"
"1","        if (type == ""B"") {
"
"1","            if (!is.null(names(datacoords))) {
"
"1","                knotcoords <- data.frame(knotcoords)
"
"1","                names(knotcoords) <- names(datacoords)
"
"1","            }
"
"1","            datacoords2 = rbind(datacoords, knotcoords)
"
"1","            geodistsoutput <- getGeoDist(xygrid = xygrid, polys = polys, 
"
"1","                datalocations = datacoords2, plot.transition = plot.transition)
"
"1","            d2k <- geodistsoutput$distance[(1:nrow(datacoords)), 
"
"1","                ((nrow(datacoords) + 1):nrow(datacoords2))]
"
"1","            if (knotmat == T) {
"
"1","                knotDist = geodistsoutput$distance[(nrow(datacoords) + 
"
"1","                  1):nrow(datacoords2), (nrow(datacoords) + 1):nrow(datacoords2)]
"
"1","            }
"
"1","        }
"
"1","        if (type == ""A"") {
"
"1","            geodistsoutput <- getGeoDist(xygrid = xygrid, polys = polys, 
"
"1","                datalocations = datacoords, plot.transition = plot.transition)
"
"1","            d2k <- geodistsoutput$distance[, attr(knotcoords, 
"
"1","                ""points.selected"")]
"
"1","            if (knotmat == T) {
"
"1","                knotDist = geodistsoutput$distance[attr(knotcoords, 
"
"1","                  ""points.selected""), attr(knotcoords, ""points.selected"")]
"
"1","            }
"
"1","        }
"
"1","    }
"
"1","    if (factorknots) {
"
"1","        kcontr <- model.matrix(~-1 + knotcoords.factor)
"
"1","        if (knotmat == TRUE) {
"
"1","            kcontr.m <- kcontr %*% t(kcontr)
"
"1","            kcontr.inf <- ifelse(kcontr.m == 0, Inf, kcontr.m)
"
"1","            diag(kcontr.inf) <- 0
"
"1","            knotDist <- knotDist + kcontr.inf
"
"1","        }
"
"1","        dcontr <- model.matrix(~-1 + datacoords.factor)
"
"1","        dkcontr <- dcontr %*% t(kcontr)
"
"1","        dkcontr.inf <- ifelse(dkcontr == 0, Inf, dkcontr)
"
"1","        d2k <- d2k + dkcontr.inf
"
"1","    }
"
"1","    if (knotmat == T) {
"
"1","        return(list(dataDist = d2k, knotDist = knotDist))
"
"1","    }
"
"1","    else {
"
"1","        return(list(dataDist = d2k))
"
"1","    }
"
"1","}
"
"1","debug at C:/Users/lindesay/Documents/GitHub/MRSea/R/functions.R#266: "
"1","stopifnot(ncol(knotcoords) == ncol(datacoords), (ncol(datacoords) | 
"
"1","    ncol(knotcoords)) < 4)
"
"1","debug at C:/Users/lindesay/Documents/GitHub/MRSea/R/functions.R#268: "
"1","if (ncol(knotcoords) == 3) {
"
"1","    knotcoords.factor = knotcoords[, 3]
"
"1","    knotcoords = knotcoords[, 1:2]
"
"1","    datacoords.factor = datacoords[, 3]
"
"1","    datacoords = datacoords[, 1:2]
"
"1","    factorknots = TRUE
"
"1","} else {
"
"1","    factorknots = FALSE
"
"1","}
"
"1","debug at C:/Users/lindesay/Documents/GitHub/MRSea/R/functions.R#269: "
"1","knotcoords.factor = knotcoords[, 3]
"
"1","debug at C:/Users/lindesay/Documents/GitHub/MRSea/R/functions.R#270: "
"1","knotcoords = knotcoords[, 1:2]
"
"1","debug at C:/Users/lindesay/Documents/GitHub/MRSea/R/functions.R#271: "
"1","datacoords.factor = datacoords[, 3]
"
"1","debug at C:/Users/lindesay/Documents/GitHub/MRSea/R/functions.R#272: "
"1","datacoords = datacoords[, 1:2]
"
"1","debug at C:/Users/lindesay/Documents/GitHub/MRSea/R/functions.R#273: "
"1","factorknots = TRUE
"
"1","debug at C:/Users/lindesay/Documents/GitHub/MRSea/R/functions.R#278: "
"1","if (is.null(polys)) {
"
"1","    if (length(which(is.na(knotcoords[, 1]))) > 0) 
"
"1","        stop(""remove NAs from knotcoords"")
"
"1","    d2k <- matrix(0, ncol = dim((knotcoords))[1], nrow = length(datacoords[, 
"
"1","        1]))
"
"1","    for (i in 1:dim(knotcoords)[1]) {
"
"1","        d2k[, i] <- sqrt((datacoords[, 1] - knotcoords[i, 1])^2 + 
"
"1","            (datacoords[, 2] - knotcoords[i, 2])^2)
"
"1","    }
"
"1","    if (knotmat == T) {
"
"1","        knotDist = as.matrix(dist(na.omit(knotcoords), method = ""euclidean"", 
"
"1","            diag = TRUE, upper = TRUE))
"
"1","    }
"
"1","}
"
"1","debug at C:/Users/lindesay/Documents/GitHub/MRSea/R/functions.R#280: "
"1","if (length(which(is.na(knotcoords[, 1]))) > 0) stop(""remove NAs from knotcoords"")
"
"1","debug at C:/Users/lindesay/Documents/GitHub/MRSea/R/functions.R#282: "
"1","d2k <- matrix(0, ncol = dim((knotcoords))[1], nrow = length(datacoords[, 
"
"1","    1]))
"
"1","debug at C:/Users/lindesay/Documents/GitHub/MRSea/R/functions.R#283: "
"1","for (i in 1:dim(knotcoords)[1]) {
"
"1","    d2k[, i] <- sqrt((datacoords[, 1] - knotcoords[i, 1])^2 + 
"
"1","        (datacoords[, 2] - knotcoords[i, 2])^2)
"
"1","}
"
"1","debug at C:/Users/lindesay/Documents/GitHub/MRSea/R/functions.R#284: "
"1","d2k[, i] <- sqrt((datacoords[, 1] - knotcoords[i, 1])^2 + (datacoords[, 
"
"1","    2] - knotcoords[i, 2])^2)
"
"1","debug at C:/Users/lindesay/Documents/GitHub/MRSea/R/functions.R#284: "
"1","d2k[, i] <- sqrt((datacoords[, 1] - knotcoords[i, 1])^2 + (datacoords[, 
"
"1","    2] - knotcoords[i, 2])^2)
"
"1","debug at C:/Users/lindesay/Documents/GitHub/MRSea/R/functions.R#284: "
"1","d2k[, i] <- sqrt((datacoords[, 1] - knotcoords[i, 1])^2 + (datacoords[, 
"
"1","    2] - knotcoords[i, 2])^2)
"
"1","debug at C:/Users/lindesay/Documents/GitHub/MRSea/R/functions.R#284: "
"1","d2k[, i] <- sqrt((datacoords[, 1] - knotcoords[i, 1])^2 + (datacoords[, 
"
"1","    2] - knotcoords[i, 2])^2)
"
"0","c"
"1","debug at C:/Users/lindesay/Documents/GitHub/MRSea/R/functions.R#287: "
"1","if (knotmat == T) {
"
"1","    knotDist = as.matrix(dist(na.omit(knotcoords), method = ""euclidean"", 
"
"1","        diag = TRUE, upper = TRUE))
"
"1","}
"
"1","debug at C:/Users/lindesay/Documents/GitHub/MRSea/R/functions.R#289: "
"1","knotDist = as.matrix(dist(na.omit(knotcoords), method = ""euclidean"", 
"
"1","    diag = TRUE, upper = TRUE))
"
"1","debug at C:/Users/lindesay/Documents/GitHub/MRSea/R/functions.R#294: "
"1","if (!is.null(polys)) {
"
"1","    Nx = seq(min(c(datacoords[, 1], knotcoords[, 1])), max(c(datacoords[, 
"
"1","        1], knotcoords[, 1])), length = grid.dim[1])
"
"1","    Ny = seq(min(c(datacoords[, 2], knotcoords[, 2])), max(c(datacoords[, 
"
"1","        2], knotcoords[, 2])), length = grid.dim[2])
"
"1","    xygrid <- expand.grid(x = Nx, y = Ny)
"
"1","    if (type == ""B"") {
"
"1","        if (!is.null(names(datacoords))) {
"
"1","            knotcoords <- data.frame(knotcoords)
"
"1","            names(knotcoords) <- names(datacoords)
"
"1","        }
"
"1","        datacoords2 = rbind(datacoords, knotcoords)
"
"1","        geodistsoutput <- getGeoDist(xygrid = xygrid, polys = polys, 
"
"1","            datalocations = datacoords2, plot.transition = plot.transition)
"
"1","        d2k <- geodistsoutput$distance[(1:nrow(datacoords)), 
"
"1","            ((nrow(datacoords) + 1):nrow(datacoords2))]
"
"1","        if (knotmat == T) {
"
"1","            knotDist = geodistsoutput$distance[(nrow(datacoords) + 
"
"1","                1):nrow(datacoords2), (nrow(datacoords) + 1):nrow(datacoords2)]
"
"1","        }
"
"1","    }
"
"1","    if (type == ""A"") {
"
"1","        geodistsoutput <- getGeoDist(xygrid = xygrid, polys = polys, 
"
"1","            datalocations = datacoords, plot.transition = plot.transition)
"
"1","        d2k <- geodistsoutput$distance[, attr(knotcoords, ""points.selected"")]
"
"1","        if (knotmat == T) {
"
"1","            knotDist = geodistsoutput$distance[attr(knotcoords, 
"
"1","                ""points.selected""), attr(knotcoords, ""points.selected"")]
"
"1","        }
"
"1","    }
"
"1","}
"
"1","debug at C:/Users/lindesay/Documents/GitHub/MRSea/R/functions.R#327: "
"1","if (factorknots) {
"
"1","    kcontr <- model.matrix(~-1 + knotcoords.factor)
"
"1","    if (knotmat == TRUE) {
"
"1","        kcontr.m <- kcontr %*% t(kcontr)
"
"1","        kcontr.inf <- ifelse(kcontr.m == 0, Inf, kcontr.m)
"
"1","        diag(kcontr.inf) <- 0
"
"1","        knotDist <- knotDist + kcontr.inf
"
"1","    }
"
"1","    dcontr <- model.matrix(~-1 + datacoords.factor)
"
"1","    dkcontr <- dcontr %*% t(kcontr)
"
"1","    dkcontr.inf <- ifelse(dkcontr == 0, Inf, dkcontr)
"
"1","    d2k <- d2k + dkcontr.inf
"
"1","}
"
"1","debug at C:/Users/lindesay/Documents/GitHub/MRSea/R/functions.R#328: "
"1","kcontr <- model.matrix(~-1 + knotcoords.factor)
"
"1","debug at C:/Users/lindesay/Documents/GitHub/MRSea/R/functions.R#330: "
"1","if (knotmat == TRUE) {
"
"1","    kcontr.m <- kcontr %*% t(kcontr)
"
"1","    kcontr.inf <- ifelse(kcontr.m == 0, Inf, kcontr.m)
"
"1","    diag(kcontr.inf) <- 0
"
"1","    knotDist <- knotDist + kcontr.inf
"
"1","}
"
"0","kcontr"
"1","   "
"1"," knotcoords.factor"
"1","
1  "
"1","                 0"
"1","
2  "
"1","                 0"
"1","
3  "
"1","                 0"
"1","
4  "
"1","                 0"
"1","
5  "
"1","                 0"
"1","
6  "
"1","                 0"
"1","
7  "
"1","                 0"
"1","
8  "
"1","                 0"
"1","
9  "
"1","                 0"
"1","
10 "
"1","                 0"
"1","
11 "
"1","                 0"
"1","
12 "
"1","                 0"
"1","
13 "
"1","                 0"
"1","
14 "
"1","                 0"
"1","
15 "
"1","                 0"
"1","
16 "
"1","                 0"
"1","
17 "
"1","                 0"
"1","
18 "
"1","                 0"
"1","
19 "
"1","                 0"
"1","
20 "
"1","                 0"
"1","
21 "
"1","                 0"
"1","
22 "
"1","                 0"
"1","
23 "
"1","                 0"
"1","
24 "
"1","                 0"
"1","
25 "
"1","                 0"
"1","
26 "
"1","                 0"
"1","
27 "
"1","                 0"
"1","
28 "
"1","                 0"
"1","
29 "
"1","                 0"
"1","
30 "
"1","                 0"
"1","
31 "
"1","                 0"
"1","
32 "
"1","                 0"
"1","
33 "
"1","                 0"
"1","
34 "
"1","                 0"
"1","
35 "
"1","                 0"
"1","
36 "
"1","                 0"
"1","
37 "
"1","                 0"
"1","
38 "
"1","                 0"
"1","
39 "
"1","                 0"
"1","
40 "
"1","                 0"
"1","
41 "
"1","                 0"
"1","
42 "
"1","                 0"
"1","
43 "
"1","                 0"
"1","
44 "
"1","                 0"
"1","
45 "
"1","                 0"
"1","
46 "
"1","                 0"
"1","
47 "
"1","                 0"
"1","
48 "
"1","                 0"
"1","
49 "
"1","                 0"
"1","
50 "
"1","                 0"
"1","
51 "
"1","                 0"
"1","
52 "
"1","                 0"
"1","
53 "
"1","                 0"
"1","
54 "
"1","                 0"
"1","
55 "
"1","                 0"
"1","
56 "
"1","                 0"
"1","
57 "
"1","                 0"
"1","
58 "
"1","                 0"
"1","
59 "
"1","                 0"
"1","
60 "
"1","                 0"
"1","
61 "
"1","                 0"
"1","
62 "
"1","                 0"
"1","
63 "
"1","                 0"
"1","
64 "
"1","                 0"
"1","
65 "
"1","                 0"
"1","
66 "
"1","                 0"
"1","
67 "
"1","                 0"
"1","
68 "
"1","                 0"
"1","
69 "
"1","                 0"
"1","
70 "
"1","                 0"
"1","
71 "
"1","                 0"
"1","
72 "
"1","                 0"
"1","
73 "
"1","                 0"
"1","
74 "
"1","                 0"
"1","
75 "
"1","                 0"
"1","
76 "
"1","                 0"
"1","
77 "
"1","                 0"
"1","
78 "
"1","                 0"
"1","
79 "
"1","                 0"
"1","
80 "
"1","                 0"
"1","
81 "
"1","                 0"
"1","
82 "
"1","                 0"
"1","
83 "
"1","                 0"
"1","
84 "
"1","                 0"
"1","
85 "
"1","                 0"
"1","
86 "
"1","                 0"
"1","
87 "
"1","                 0"
"1","
88 "
"1","                 0"
"1","
89 "
"1","                 0"
"1","
90 "
"1","                 0"
"1","
91 "
"1","                 0"
"1","
92 "
"1","                 0"
"1","
93 "
"1","                 0"
"1","
94 "
"1","                 0"
"1","
95 "
"1","                 0"
"1","
96 "
"1","                 0"
"1","
97 "
"1","                 0"
"1","
98 "
"1","                 0"
"1","
99 "
"1","                 0"
"1","
100"
"1","                 0"
"1","
101"
"1","                 0"
"1","
102"
"1","                 0"
"1","
103"
"1","                 0"
"1","
104"
"1","                 0"
"1","
105"
"1","                 0"
"1","
106"
"1","                 0"
"1","
107"
"1","                 0"
"1","
108"
"1","                 0"
"1","
109"
"1","                 0"
"1","
110"
"1","                 0"
"1","
111"
"1","                 0"
"1","
112"
"1","                 0"
"1","
113"
"1","                 0"
"1","
114"
"1","                 0"
"1","
115"
"1","                 0"
"1","
116"
"1","                 0"
"1","
117"
"1","                 0"
"1","
118"
"1","                 0"
"1","
119"
"1","                 0"
"1","
120"
"1","                 0"
"1","
121"
"1","                 0"
"1","
122"
"1","                 0"
"1","
123"
"1","                 0"
"1","
124"
"1","                 0"
"1","
125"
"1","                 0"
"1","
126"
"1","                 0"
"1","
127"
"1","                 0"
"1","
128"
"1","                 0"
"1","
129"
"1","                 0"
"1","
130"
"1","                 0"
"1","
131"
"1","                 0"
"1","
132"
"1","                 0"
"1","
133"
"1","                 0"
"1","
134"
"1","                 0"
"1","
135"
"1","                 0"
"1","
136"
"1","                 0"
"1","
137"
"1","                 0"
"1","
138"
"1","                 0"
"1","
139"
"1","                 0"
"1","
140"
"1","                 0"
"1","
141"
"1","                 0"
"1","
142"
"1","                 0"
"1","
143"
"1","                 0"
"1","
144"
"1","                 0"
"1","
145"
"1","                 0"
"1","
146"
"1","                 0"
"1","
147"
"1","                 0"
"1","
148"
"1","                 0"
"1","
149"
"1","                 0"
"1","
150"
"1","                 0"
"1","
151"
"1","                 1"
"1","
152"
"1","                 1"
"1","
153"
"1","                 1"
"1","
154"
"1","                 1"
"1","
155"
"1","                 1"
"1","
156"
"1","                 1"
"1","
157"
"1","                 1"
"1","
158"
"1","                 1"
"1","
159"
"1","                 1"
"1","
160"
"1","                 1"
"1","
161"
"1","                 1"
"1","
162"
"1","                 1"
"1","
163"
"1","                 1"
"1","
164"
"1","                 1"
"1","
165"
"1","                 1"
"1","
166"
"1","                 1"
"1","
167"
"1","                 1"
"1","
168"
"1","                 1"
"1","
169"
"1","                 1"
"1","
170"
"1","                 1"
"1","
171"
"1","                 1"
"1","
172"
"1","                 1"
"1","
173"
"1","                 1"
"1","
174"
"1","                 1"
"1","
175"
"1","                 1"
"1","
176"
"1","                 1"
"1","
177"
"1","                 1"
"1","
178"
"1","                 1"
"1","
179"
"1","                 1"
"1","
180"
"1","                 1"
"1","
181"
"1","                 1"
"1","
182"
"1","                 1"
"1","
183"
"1","                 1"
"1","
184"
"1","                 1"
"1","
185"
"1","                 1"
"1","
186"
"1","                 1"
"1","
187"
"1","                 1"
"1","
188"
"1","                 1"
"1","
189"
"1","                 1"
"1","
190"
"1","                 1"
"1","
191"
"1","                 1"
"1","
192"
"1","                 1"
"1","
193"
"1","                 1"
"1","
194"
"1","                 1"
"1","
195"
"1","                 1"
"1","
196"
"1","                 1"
"1","
197"
"1","                 1"
"1","
198"
"1","                 1"
"1","
199"
"1","                 1"
"1","
200"
"1","                 1"
"1","
201"
"1","                 1"
"1","
202"
"1","                 1"
"1","
203"
"1","                 1"
"1","
204"
"1","                 1"
"1","
205"
"1","                 1"
"1","
206"
"1","                 1"
"1","
207"
"1","                 1"
"1","
208"
"1","                 1"
"1","
209"
"1","                 1"
"1","
210"
"1","                 1"
"1","
211"
"1","                 1"
"1","
212"
"1","                 1"
"1","
213"
"1","                 1"
"1","
214"
"1","                 1"
"1","
215"
"1","                 1"
"1","
216"
"1","                 1"
"1","
217"
"1","                 1"
"1","
218"
"1","                 1"
"1","
219"
"1","                 1"
"1","
220"
"1","                 1"
"1","
221"
"1","                 1"
"1","
222"
"1","                 1"
"1","
223"
"1","                 1"
"1","
224"
"1","                 1"
"1","
225"
"1","                 1"
"1","
226"
"1","                 1"
"1","
227"
"1","                 1"
"1","
228"
"1","                 1"
"1","
229"
"1","                 1"
"1","
230"
"1","                 1"
"1","
231"
"1","                 1"
"1","
232"
"1","                 1"
"1","
233"
"1","                 1"
"1","
234"
"1","                 1"
"1","
235"
"1","                 1"
"1","
236"
"1","                 1"
"1","
237"
"1","                 1"
"1","
238"
"1","                 1"
"1","
239"
"1","                 1"
"1","
240"
"1","                 1"
"1","
241"
"1","                 1"
"1","
242"
"1","                 1"
"1","
243"
"1","                 1"
"1","
244"
"1","                 1"
"1","
245"
"1","                 1"
"1","
246"
"1","                 1"
"1","
247"
"1","                 1"
"1","
248"
"1","                 1"
"1","
249"
"1","                 1"
"1","
250"
"1","                 1"
"1","
251"
"1","                 1"
"1","
252"
"1","                 1"
"1","
253"
"1","                 1"
"1","
254"
"1","                 1"
"1","
255"
"1","                 1"
"1","
256"
"1","                 1"
"1","
257"
"1","                 1"
"1","
258"
"1","                 1"
"1","
259"
"1","                 1"
"1","
260"
"1","                 1"
"1","
261"
"1","                 1"
"1","
262"
"1","                 1"
"1","
263"
"1","                 1"
"1","
264"
"1","                 1"
"1","
265"
"1","                 1"
"1","
266"
"1","                 1"
"1","
267"
"1","                 1"
"1","
268"
"1","                 1"
"1","
269"
"1","                 1"
"1","
270"
"1","                 1"
"1","
271"
"1","                 1"
"1","
272"
"1","                 1"
"1","
273"
"1","                 1"
"1","
274"
"1","                 1"
"1","
275"
"1","                 1"
"1","
276"
"1","                 1"
"1","
277"
"1","                 1"
"1","
278"
"1","                 1"
"1","
279"
"1","                 1"
"1","
280"
"1","                 1"
"1","
281"
"1","                 1"
"1","
282"
"1","                 1"
"1","
283"
"1","                 1"
"1","
284"
"1","                 1"
"1","
285"
"1","                 1"
"1","
286"
"1","                 1"
"1","
287"
"1","                 1"
"1","
288"
"1","                 1"
"1","
289"
"1","                 1"
"1","
290"
"1","                 1"
"1","
291"
"1","                 1"
"1","
292"
"1","                 1"
"1","
293"
"1","                 1"
"1","
294"
"1","                 1"
"1","
295"
"1","                 1"
"1","
296"
"1","                 1"
"1","
297"
"1","                 1"
"1","
298"
"1","                 1"
"1","
299"
"1","                 1"
"1","
300"
"1","                 1"
"1","
"
"1","attr(,""assign"")"
"1","
"
"1","[1]"
"1"," 1"
"1","
"
"0","dim(kcontr)"
"1","[1]"
"1"," 300"
"1","   1"
"1","
"
"0","knotcoords.factor"
"1","  [1]"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1","
"
"1"," [38]"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1","
"
"1"," [75]"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1","
"
"1","[112]"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1","
"
"1","[149]"
"1"," 0"
"1"," 0"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1","
"
"1","[186]"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1","
"
"1","[223]"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1","
"
"1","[260]"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1","
"
"1","[297]"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1","
"
"0","is.factor(knotcoords.factor)"
"1","[1]"
"1"," FALSE"
"1","
"
"0","    if(!is.factor(knotcoords.factor)) knotcoords.factor <- as.factor(knotcoords.factor)"
"1","debug at C:/Users/lindesay/Documents/GitHub/MRSea/R/functions.R#330: "
"1","knotcoords.factor <- as.factor(knotcoords.factor)
"
"0","    if(!is.factor(datacoords.factor)) datacoords.factor <- as.factor(datacoords.factor)"
"1","debug at C:/Users/lindesay/Documents/GitHub/MRSea/R/functions.R#330: "
"1","datacoords.factor <- as.factor(datacoords.factor)
"
"0","is.factor(knotcoords.factor)"
"1","[1]"
"1"," FALSE"
"1","
"
"0","knotcoords.factor <- as.factor(knotcoords.factor)"
"0","is.factor(knotcoords.factor)"
"1","[1]"
"1"," TRUE"
"1","
"
"0","is.factor(knotcoords.factor)"
"1","[1]"
"1"," TRUE"
"1","
"
"0","is.factor(datacoords.factor)"
"1","[1]"
"1"," TRUE"
"1","
"
"0","    kcontr <- model.matrix(~-1 + knotcoords.factor)"
"0","dim*(kcontr)"
"2","Error in dim * (kcontr) : non-numeric argument to binary operator
"
